[["index.html", "The trip for program learning Chapter 1 Motivation", " The trip for program learning YinCheng Chen 2021-07-30 Chapter 1 Motivation To pay tribute to the shoulders of R giants, I start to write some essay about my R skill and make some note in this website. "],["r-base-function.html", "Chapter 2 R base function", " Chapter 2 R base function 2.0.1 字串 字串連接 paste(&quot;OTU_&quot;, 1, sep=&quot;&quot;) ## [1] &quot;OTU_1&quot; paste(&quot;OTU_&quot;, 1:10, sep=&quot;&quot;) ## [1] &quot;OTU_1&quot; &quot;OTU_2&quot; &quot;OTU_3&quot; &quot;OTU_4&quot; &quot;OTU_5&quot; &quot;OTU_6&quot; &quot;OTU_7&quot; &quot;OTU_8&quot; ## [9] &quot;OTU_9&quot; &quot;OTU_10&quot; str_vec1 &lt;- c(&quot;aaa&quot;, &quot;bbb&quot;, &quot;ccc&quot;, &quot;ddd&quot;) str_vec2 &lt;- c(1, 2, 3, 4) paste(str_vec1, str_vec2, sep=&quot;_&quot;) ## [1] &quot;aaa_1&quot; &quot;bbb_2&quot; &quot;ccc_3&quot; &quot;ddd_4&quot; paste(str_vec1, collapse =&quot;_&quot;) ## [1] &quot;aaa_bbb_ccc_ddd&quot; 字串切割 sentence = &quot;The earth is round (p &lt; 0.05).&quot; strsplit(sentence, split=&quot; &quot;, fixed=F) ## [[1]] ## [1] &quot;The&quot; &quot;earth&quot; &quot;is&quot; &quot;round&quot; &quot;(p&quot; &quot;&lt;&quot; &quot;0.05).&quot; strsplit(sentence, split=&quot;\\\\s&quot;, fixed=F) ## [[1]] ## [1] &quot;The&quot; &quot;earth&quot; &quot;is&quot; &quot;round&quot; &quot;(p&quot; &quot;&lt;&quot; &quot;0.05).&quot; substr(sentence,5,9) ## [1] &quot;earth&quot; 部份字串搜尋 str_vec &lt;- c(&quot;aaa&quot;, &quot;bbb&quot;, &quot;ccc&quot;, &quot;ddd&quot;) grep(&quot;a&quot;, str_vec) ## [1] 1 grep(&quot;b&quot;, str_vec) ## [1] 2 grep(&quot;b&quot;, str_vec, value=T) ## [1] &quot;bbb&quot; grep(&quot;b&quot;, str_vec, value=T, invert=T) ## [1] &quot;aaa&quot; &quot;ccc&quot; &quot;ddd&quot; grep(&quot;z&quot;, str_vec) ## integer(0) grepl(&quot;b&quot;, str_vec) ## [1] FALSE TRUE FALSE FALSE 字串取代 sentence = &quot;Bacteria;Firmicutes;Clostridia;Clostridiales;Lachnospiraceae&quot; sub(&quot;;&quot;, replacement=&quot;__&quot;, sentence) ## [1] &quot;Bacteria__Firmicutes;Clostridia;Clostridiales;Lachnospiraceae&quot; gsub(&quot;;&quot;, replacement=&quot;__&quot;, sentence) ## [1] &quot;Bacteria__Firmicutes__Clostridia__Clostridiales__Lachnospiraceae&quot; 2.0.2 亂數產生 Uniform distribution runif(5) #sampling 5 numbers form 0 to 1 ## [1] 0.5371176 0.3355103 0.6947136 0.3120170 0.9453808 runif(5,2,10) #sampling 5 numbers form 2 to 10 ## [1] 3.980927 3.030380 6.733376 5.429361 6.788460 hist(runif(10000)) Normal distribution rnorm(5) #sampling 5 numbers : mean = 0, sd = 1 ## [1] 0.8154903 -0.6163431 -1.9257925 -0.4028937 -0.4024457 rnorm(5,10,1) #sampling 5 numbers : mean = 10, sd = 1 ## [1] 10.354090 11.286390 10.203504 9.531578 10.542691 hist(rnorm(10000,100,5)) Binomial distribution rbinom(10,10,0.9) ## [1] 9 9 9 10 8 9 8 8 9 10 Exponential distribution rexp(10,3) ## [1] 0.07952339 0.16368759 0.07712258 0.46596109 0.05065601 0.11344669 ## [7] 0.31491146 0.23871906 0.11436600 0.40010072 2.0.3 矩陣運算 產生矩陣 M &lt;- matrix(0, nrow = 5, ncol = 6) M ## [,1] [,2] [,3] [,4] [,5] [,6] ## [1,] 0 0 0 0 0 0 ## [2,] 0 0 0 0 0 0 ## [3,] 0 0 0 0 0 0 ## [4,] 0 0 0 0 0 0 ## [5,] 0 0 0 0 0 0 M &lt;- matrix(rnorm(3*2,10,5),3,2) M ## [,1] [,2] ## [1,] 18.748336 7.432962 ## [2,] 9.367433 10.916382 ## [3,] 13.342702 13.952576 測維度 dim(M) ## [1] 3 2 nrow(M) ## [1] 3 ncol(M) ## [1] 2 矩陣組合 cbind(M,M) ## [,1] [,2] [,3] [,4] ## [1,] 18.748336 7.432962 18.748336 7.432962 ## [2,] 9.367433 10.916382 9.367433 10.916382 ## [3,] 13.342702 13.952576 13.342702 13.952576 rbind(M,M) ## [,1] [,2] ## [1,] 18.748336 7.432962 ## [2,] 9.367433 10.916382 ## [3,] 13.342702 13.952576 ## [4,] 18.748336 7.432962 ## [5,] 9.367433 10.916382 ## [6,] 13.342702 13.952576 矩陣轉置 M &lt;- matrix(1:8,nrow = 2, dimnames = list(c(&quot;r1&quot;,&quot;r2&quot;),c(&quot;c1&quot;,&quot;c2&quot;,&quot;c3&quot;,&quot;c4&quot;))) M ## c1 c2 c3 c4 ## r1 1 3 5 7 ## r2 2 4 6 8 t(M) # 轉置 ## r1 r2 ## c1 1 2 ## c2 3 4 ## c3 5 6 ## c4 7 8 M[nrow(M):1,] # 上下翻轉 ## c1 c2 c3 c4 ## r2 2 4 6 8 ## r1 1 3 5 7 M[,ncol(M):1] # 左右翻轉 ## c4 c3 c2 c1 ## r1 7 5 3 1 ## r2 8 6 4 2 t(apply(M, 2, rev)) # 順時針90度翻轉 ## r2 r1 ## c1 2 1 ## c2 4 3 ## c3 6 5 ## c4 8 7 apply(t(M), 2, rev) # 逆時針90度翻轉 ## r1 r2 ## c4 7 8 ## c3 5 6 ## c2 3 4 ## c1 1 2 其他運算 M &lt;- matrix(1:9,3,3) M ## [,1] [,2] [,3] ## [1,] 1 4 7 ## [2,] 2 5 8 ## [3,] 3 6 9 diag(M) #對角線的元素 ## [1] 1 5 9 diag(M) = 0 M ## [,1] [,2] [,3] ## [1,] 0 4 7 ## [2,] 2 0 8 ## [3,] 3 6 0 M %*% M #矩陣乘法 ## [,1] [,2] [,3] ## [1,] 29 42 32 ## [2,] 24 56 14 ## [3,] 12 12 69 library(matrixStats) M &lt;- matrix(rnorm(5*7,10,3),5,7) M ## [,1] [,2] [,3] [,4] [,5] [,6] [,7] ## [1,] 2.062054 11.709560 3.960577 10.886099 7.428905 11.821585 12.265635 ## [2,] 10.460700 6.997285 11.376389 11.215400 12.108082 11.847187 10.916629 ## [3,] 9.142052 5.867752 13.460103 5.706703 6.680269 7.820855 7.646656 ## [4,] 11.272313 8.508631 12.551558 10.296370 2.017326 8.566887 12.881455 ## [5,] 15.612150 12.741166 9.773034 8.814322 15.391152 9.394100 10.213732 rowSums(M) ## [1] 60.13441 74.92167 56.32439 66.09454 81.93966 rowMeans(M) ## [1] 8.590631 10.703096 8.046341 9.442077 11.705665 rowSds(M) ## [1] 4.170351 1.724147 2.671027 3.704546 2.874596 rowMaxs(M) ## [1] 12.26564 12.10808 13.46010 12.88146 15.61215 rowMins(M) ## [1] 2.062054 6.997285 5.706703 2.017326 8.814322 Z-transformation gene_expression sample_1 sample_2 sample_3 sample_4 sample_5 sample_6 gene_1 15.17496 9.806111 8.857128 15.091408 12.023845 7.349175 gene_2 12.13401 12.852231 10.072628 7.293423 9.024422 12.963708 gene_3 11.14862 2.391793 2.779141 6.037992 15.304354 7.572556 gene_4 8.95282 10.729548 7.491994 10.012653 8.902859 8.551492 gene_5 13.85805 13.762368 10.776997 5.046726 10.984063 10.273603 cal_z_score &lt;- function(x){ (x - mean(x)) / sd(x) } z_transformed &lt;- t(apply(gene_expression, 1, cal_z_score)) z_transformed sample_1 sample_2 sample_3 sample_4 sample_5 sample_6 gene_1 1.1570519 -0.4814941 -0.7711193 1.1315531 0.1953475 -1.2313391 gene_2 0.6113970 0.9226952 -0.2820648 -1.4866523 -0.7363874 0.9710124 gene_3 0.7226775 -1.0305528 -0.9530007 -0.3005365 1.5547092 0.0067032 gene_4 -0.1358113 1.4303145 -1.4234805 0.7983958 -0.1798502 -0.4895683 gene_5 0.9576050 0.9278028 -0.0020673 -1.7869068 0.0624287 -0.1588623 rowMeans(z_transformed) ## gene_1 gene_2 gene_3 gene_4 gene_5 ## -2.590520e-16 9.251859e-18 -5.796868e-17 -6.291264e-16 1.379105e-16 rowSds(z_transformed) ## [1] 1 1 1 1 1 "],["basic-statistics.html", "Chapter 3 Basic Statistics", " Chapter 3 Basic Statistics 3.0.1 Outline 依據你的資料型態來選擇統計方法，大致上可以用比較方式，原資料是否符合常態分佈與要檢定的統計量來挑選統計方法。 比較方式關乎到你的實驗設計，大致上可分為 : 比較一個樣本與目標。 i.g. 這個骰子是均勻隨機的還是灌鉛的。 兩組樣本相互比較，其中亦可分為 : 兩組獨立樣本。 i.g. 比較吃安慰劑與藥劑的兩群小鼠之基因表現。 兩組成對樣本。 i.g. 比較同一批小鼠吃藥前後的基因表現。 比較兩組以上的樣本。 i.g. 比較不同國家國民的BMI。 統計分法大致上可分為參數(parametric)分析及無母數(non-parametric)分析兩大類。 參數分析需要顧及資料是否為常態分布、是否有相同變異數、是否有離群值(outlier)等許多前提假設。無母數分析則無需顧及前提假設。故需要檢查資料是否符合常態分佈，以下提供幾種方法。 於是我們拿Anderson’s Iris data set中的花萼寬及花瓣寬來測試。 par(mfrow = c(1,2)) hist(iris$Sepal.Width, main = &quot;Histogram of Sepal.Width&quot;) hist(iris$Petal.Width, main = &quot;Histogram of Petal.Width&quot;) 從直方圖可以看出Sepal.Width的分佈比Petal.Width更符合常態分佈。 par(mfrow = c(1,2)) qqnorm(iris$Sepal.Width, main = &quot;Q-Q plot of Sepal.Width&quot;) qqline(iris$Sepal.Width) qqnorm(iris$Petal.Width, main = &quot;Q-Q plot of Petal.Width&quot;) qqline(iris$Petal.Width) 且可以看出Sepal.Width的分佈比Petal.Width更符合常態分佈。 "],["clustering-method.html", "Chapter 4 Clustering Method", " Chapter 4 Clustering Method "],["dimension-reduction.html", "Chapter 5 Dimension Reduction", " Chapter 5 Dimension Reduction "],["visualization.html", "Chapter 6 Visualization", " Chapter 6 Visualization "],["ml-model.html", "Chapter 7 ML Model", " Chapter 7 ML Model "],["rcpp.html", "Chapter 8 Rcpp", " Chapter 8 Rcpp 8.0.1 input data type and function int double std::string bool IntegerVector list.size : 同length(list) NumercicVector LogicalVector CharacterVector GenericVector ExpressionVector RawVector IntergerMatrix NumericMatrix x(n,m) : 產生nxm的矩陣 x.nrow(), x.ncol(), x.size() :確認維度 x(i,j) : 看xij x.row(i) or x(i,), x.column(j) or x(,j) transpose(x) 轉置 NumericMatrix::zeros(n), NumericMatrix::eye(n) : 建立n階的0或單位方陣 NumericMatrix 8.0.2 Rcpp調用Rmath.h函數 double expm1(double); /* = exp(x)-1 {care for small x} */ double log1p(double); /* = log(1+x) {care for small x} */ double beta(double, double); double lbeta(double, double); double choose(double, double); double lchoose(double, double); 8.0.3 架構 8.0.3.1 Add cppFunction(&#39;int cpp_add(int x, int y, int z) { int sum = x + y + z; return sum; }&#39;) cpp_add(1,2,3) ## [1] 6 cppFunction(&#39;double cpp_sum(NumericVector x) { int n = x.size(); double total = 0; for(int i = 0; i &lt; n; ++i) { total += x[i]; } return total; }&#39;) cpp_sum(c(1,2,3)) ## [1] 6 8.0.3.2 Sort cppFunction(&#39;NumericVector cpp_sort(NumericVector x) { int x_length = x.size(); for(int i = 0; i &lt; x_length-1; ++i) { for(int j = 0; j &lt; x_length-1-i; ++j) { if (x[j] &gt; x[j+1]) { double tmp = x[j]; x[j] = x[j+1]; x[j+1] = tmp; } } } return x; }&#39;) library(microbenchmark) x &lt;- runif(100) x.benchmark &lt;- microbenchmark( sort(x), cpp_sort(x) ) x.benchmark ## Unit: microseconds ## expr min lq mean median uq max neval cld ## sort(x) 28.153 28.716 32.95934 29.095 31.4520 209.046 100 a ## cpp_sort(x) 7.748 8.002 18.96928 8.180 8.6815 1047.013 100 a 8.0.3.3 Row sum cppFunction(&#39;NumericVector rowSumsC(NumericMatrix x) { int nrow = x.nrow(), ncol = x.ncol(); NumericVector result(nrow); for (int i = 0; i &lt; nrow; i++) { double total = 0; for (int j = 0; j &lt; ncol; j++) { total += x(i, j); } result[i] = total; } return result; }&#39;) x &lt;- matrix(sample(100), 10) x.benchmark &lt;- microbenchmark( rowSums(x), rowSumsC(x) ) x.benchmark ## Unit: microseconds ## expr min lq mean median uq max neval cld ## rowSums(x) 4.799 5.092 6.01852 5.2980 5.583 22.999 100 a ## rowSumsC(x) 2.309 2.478 13.87440 2.6125 2.784 1112.333 100 a 8.0.4 載入函數 可以寫一個cpp_sum.cpp的檔案 #include &lt;Rcpp.h&gt; using namespace Rcpp; // [[Rcpp::export]] double cpp_sum(NumericVector x) { int n = x.size(); double total = 0; for(int i = 0; i &lt; n; ++i) { total += x[i]; } return total; } 並在R裡接通 sourceCpp(&quot;cpp_sum.cpp&quot;) cpp_sum(c(1,2,3)) 或是在R裡直接 sourceCpp(code=&#39; #include &lt;Rcpp.h&gt; using namespace Rcpp; // [[Rcpp::export]] double cpp_sum(NumericVector x) { int n = x.size(); double total = 0; for(int i = 0; i &lt; n; ++i) { total += x[i]; } return total; } &#39;) cpp_sum(c(1,2,3)) ## [1] 6 "],["bash-cheatsheet.html", "Chapter 9 Bash cheatsheet", " Chapter 9 Bash cheatsheet 9.0.1 基本的指令 change directory cd folder_A #變更現行目錄至 folder_A cd .. #回上一層目錄 cd ~ #回到home make directory mkdir folder_A #建立 folder_A 至現行目錄 list ls #陳列現行目錄下的檔案名稱 ls -a #檢視隱藏檔案 ls -l #檢視詳細清單 move mv folder_A/file_1 folder_B/file_1 #移動file_1 從 folder_A 至 folder_B mv folder_A/file_1 folder_A/file_2 #在原資料夾下變更檔案名稱為 file_2 mv -r folder_A folder_B/folder_A將folder_A #移動至folder_B底下 copy cp folder_A/file_1 folder_B/file_1 #複製file_1 從 folder_A 至 folder_B cp -r folder_A folder_B/folder_A #將folder_A 複製至folder_B底下 remove rm file_1 #刪除 file_1 rm -r folder_A #刪除 folder_A a glance at file less file_1 #進入閱讀模式查看 file_1 , 推出按q鍵 cat file_1 #將file_1印在銀幕上 more file_1 #將file_1以一頁一頁的顯示，逐頁閱讀 head file_1 #只檢視file_1的前6行 tail file_1 #指檢視file_1的後6行 system status top #檢視目前電腦運行的狀態 df -g #檢視目前硬碟的狀態，以Gb為單位 free -g #檢視目前RAM的狀態，以Gb為單位 who #檢視目前那些使用者在線上 9.0.2 PATH 9.0.2.1 絕對路徑與相對路徑 假設有個名為anywhere_door.jpg的圖片在treasure_bag的資料夾內。 絕對路徑是以根目錄“/”為始，為 /home/dorAemon/treasure_bag/anywhere_door.jpg 相對路徑則是以當下目錄為主，若當下在自己的home目錄，則為 treasure_bag/anywhere_door.jpg or ~/treasure_bag/anywhere_door.jpg 9.0.2.2 解析檔案 以 /home/dorAemon/treasure_bag/anywhere_door.jpg 為例 /home/dorAemon/treasure_bag 為路徑 anywhere_door 為檔名 .jpg 為副檔名 以此，我們可以做基本的操作 basename /home/dorAemon/treasure_bag/anywhere_door.jpg #萃取完整檔案名 anywhere_door.jpg basename -s .jpg /home/dorAemon/treasure_bag/anywhere_door.jpg #萃取檔案名 anywhere_door dirname /home/dorAemon/treasure_bag/anywhere_door.jpg #萃取檔案路徑 /home/dorAemon/treasure_bag 9.0.2.3 環境變數 當我們要執行某指令時需要將，只輸入指令名稱，而沒有輸入完整指令路徑，系統會在環境變數 中的目錄搜尋相關指令, 如你在任何資料夾中都可以執行ls 而非/bin/ls。 檢視目前的環境變數可用以下指令 echo $PATH or env set #檢視目前 shell 的所有變數 若執行echo $PATH 會輸出類似內容 [dorAemon@localhost ~]$ echo $PATH /usr/local/bin:/usr/bin:/data/home/dorAemon/.local/bin:/data/home/dorAemon/bin:/data/home/dorAemon/treasure_bag 以:為分隔符號可知道環境變數為 /usr/local/bin /usr/bin /data/home/dorAemon/.local/bin /data/home/dorAemon/bin /data/home/dorAemon/treasure_bag 若想將在任意地方執行 ~/treasure_bag 底下的執行檔，需要將~/treasure_bag加入環境變數，即 PATH=&quot;${PATH}:/home/dorAemon/treasure_bag&quot; or export LD_LIBRARY_PATH=/home/dorAemon/treasure_bag 9.0.2.4 尋找檔案 find /home -name anywhere_door.jpg #在/home目錄底下尋找anywhere_door.jpg檔案 find /home -iname anywhere_door.jpg #尋找anywhere_door.jpg時不分英文大小寫 find /home -type d -name anywhere_door #尋找名為anywhere_door的資料夾 ; f : file; l : link find /home -user dorAemon -name anywhere_door.jpg #尋找anywhere_door.jpg且檔案擁有者是dorAemon find /home -group developer #尋找anywhere_door.jpg檔案且屬於developer的群組 which anywhere_door #在$PATH所規範的路徑去搜尋anywhere_door的檔名 9.0.3 變數 9.0.4 判斷式與迴圈 9.0.5 grep, awk, sed 三兄弟 "]]
